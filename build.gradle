plugins {
  id 'application'
  id 'java-library'
  id "org.xtext.xtend" version "4.0.0"
  id 'org.xtext.builder' version '4.0.0'
}

application {
    mainClass.set 'Hello'
}
run.environment 'JDK_JAVA_OPTIONS', '--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.logging/java.util.logging=ALL-UNNAMED'

repositories {
    mavenCentral()
    maven {
        url 'https://repo1.maven.org/maven2/'
    }
}

configurations {
    all {
        resolutionStrategy {
        }
    }
    fregelang
}

dependencies {
    implementation 'io.sarl.sre:sarl-sre:0.14.0'
    implementation 'io.sarl.lang:core:0.14.0'
    implementation 'org.eclipse.platform:org.eclipse.osgi:3.21.0'
    compileOnly 'io.sarl.sdk:sdk:0.14.0'
    implementation 'org.openjfx:javafx-fxml:21.0.4-ea+1'
    implementation 'com.google.guava:guava:33.3.0-jre'


    implementation 'org.frege-lang:frege:3.24.100.1:jdk8'
    fregelang 'org.frege-lang:frege:3.24.100.1:jdk8'

    xtextLanguages 'io.sarl.lang:compiler:0.14.0'
}

task generateFrege(type: JavaExec) {
    doFirst {
        // rmDir 'build/frege'
        // file('build/classes/java/main').mkdirs()
    }
    classpath = files(configurations.fregelang.asPath)
    inputs.dir 'src/main/frege'
    outputs.dir 'src/main/java'
    mainClass = 'frege.compiler.Main'
    args = [
        '-d',
        'src/main/java',
        'src/main/frege'
    ]
}
tasks.generateXtext.dependsOn tasks.generateFrege

xtext {
    languages {
        sarl {
            fileExtensions = ['sarl']
            setup = 'io.sarl.lang.SARLStandaloneSetup'
            generator.outlet.producesJava = true
        }
    }
    sourceSets {
        main {
            srcDir 'src/main/sarl'
        }
    }
}
